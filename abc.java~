
import org.apache.cordova.api.CordovaPlugin;
import org.apache.cordova.api.PluginResult;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

 
import java.io.File;
import java.util.ArrayList;
import java.util.List;
 
import android.app.ListActivity;
import android.os.Bundle;
import android.os.Environment;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;



public class getTheImageFileData extends CordovaPlugin
{


	public boolean execute(String action, JSONArray args, CallbackContext callbackContext) throws JSONException {


		if (action.equals("echo")) {
				File f = new File(path);
				File[] files = f.listFiles();
				for (File inFile : files) {
				    if (inFile.isFile()) {
					// check whether an image - put a creteria
					// need the file name - inFile.getName()
					// need the corresponding bitmap image - Bitmap bitmap = BitmapFactory.decodeFile(bitmapFile);

					// check whether an image
					private final String[] okFileExtensions =  new String[] {"jpg", "png", "gif","jpeg"};
					     for (String extension : okFileExtensions)
						{
						  if (file.getName().toLowerCase().endsWith(extension))
						  {
							// for all the files that are images
							// create JSON object - name , data
					       		JSONObject imageFiles = new JSONObject();
							imageFiles.put("name",file.getName());
							Bitmap bitmap = BitmapFactory.decodeFile(file);
							imageFiles.put("data", bitmap);
							jsonArray.put(imageFiles);
							callbackContext.success(jsonArray);
						  }
						}
				    }
				}



		
		} //if
                else{

			callbackContext.error("invalid action string");
			return false;
                }

		} //boolean execute function

} //class
